<Project>
    <PropertyGroup>
        <TargetFrameworks>net9.0;net8.0</TargetFrameworks>
        <LangVersion>preview</LangVersion>
        <NoWarn>$(NoWarn);CS1591;CS0618;</NoWarn>
        <Nullable>enable</Nullable>
        <ImplicitUsings>enable</ImplicitUsings>
        <RepoRoot>$([System.IO.Directory]::GetParent($(MSBuildThisFileDirectory)).Parent.FullName)</RepoRoot>
        <SrcRoot>$(RepoRoot)\src</SrcRoot>
        <CoreRoot>$(SrcRoot)\Core\src</CoreRoot>
        <CoreTestRoot>$(SrcRoot)\Core\test</CoreTestRoot>
        <DiagRoot>$(SrcRoot)\Diagnostics\src</DiagRoot>
        <EsdbRoot>$(SrcRoot)\EventStore\src</EsdbRoot>
        <ExtRoot>$(SrcRoot)\Extensions\src</ExtRoot>
        <GatewayRoot>$(SrcRoot)\Shovel\src</GatewayRoot>
        <LocalRoot>..\..\src</LocalRoot>
        <Configurations>Debug;Release;Debug CI</Configurations>
        <Platforms>AnyCPU</Platforms>
    </PropertyGroup>
    <PropertyGroup Condition=" '$(Configuration)' == 'Debug CI' ">
        <DebugSymbols Condition=" '$(DebugSymbols)' == '' ">true</DebugSymbols>
        <Optimize Condition=" '$(Optimize)' == '' ">false</Optimize>
    </PropertyGroup>
    <Import Project="$(RepoRoot)\props\Common.props"/>
    <PropertyGroup Condition="$(MSBuildProjectName.StartsWith('Eventuous.Tests'))">
        <VSTestLogger>trx%3bLogFileName=$(MSBuildProjectName).trx</VSTestLogger>
        <VSTestResultsDirectory>$(RepoRoot)/test-results/$(TargetFramework)</VSTestResultsDirectory>
        <IsPackable>false</IsPackable>
        <IsTestProject>true</IsTestProject>
        <UseMicrosoftTestingPlatformRunner>true</UseMicrosoftTestingPlatformRunner>
        <EnableMSTestRunner>true</EnableMSTestRunner>
        <TestingPlatformDotnetTestSupport>true</TestingPlatformDotnetTestSupport>
        <TestingPlatformCommandLineArguments>--report-trx</TestingPlatformCommandLineArguments>
        <TestingPlatformCaptureOutput>false</TestingPlatformCaptureOutput>
    </PropertyGroup>
    <PropertyGroup Condition="!($(MSBuildProjectName.StartsWith('Eventuous.Tests')))">
        <IsPackable>true</IsPackable>
        <IncludeSymbols>true</IncludeSymbols>
        <SymbolPackageFormat>snupkg</SymbolPackageFormat>
        <PublishRepositoryUrl>true</PublishRepositoryUrl>
        <EmbedUntrackedSources>true</EmbedUntrackedSources>
        <UpdateVersionProperties>true</UpdateVersionProperties>
        <PackageIcon>e-logo.png</PackageIcon>
        <PackageLicenseExpression>Apache-2.0</PackageLicenseExpression>
        <RepositoryUrl>https://github.com/eventuous/Eventuous.git</RepositoryUrl>
        <RepositoryType>git</RepositoryType>
        <Description>Production-grade Event Sourcing library</Description>
        <Authors>Alexey Zimarev and Eventuous community</Authors>
        <Copyright>Ubiquitous AS</Copyright>
        <PackageProjectUrl>https://eventuous.dev</PackageProjectUrl>
        <DocumentationFile>bin\$(Configuration)\$(TargetFramework)\$(MSBuildProjectName).xml</DocumentationFile>
        <GenerateDocumentationFile>true</GenerateDocumentationFile>
        <PackageTags>CQRS ES Event Sourcing EventSourcing EventStore DDD ESDB EventStoreDB</PackageTags>
    </PropertyGroup>
    <ItemGroup Condition="'$(IsPackable)' == 'true'">
        <None Include="$(RepoRoot)\e-logo.png" Pack="true" PackagePath="\"/>
        <PackageReference Include="JetBrains.Annotations" PrivateAssets="All"/>
        <PackageReference Include="Microsoft.SourceLink.GitHub" PrivateAssets="All"/>
        <PackageReference Include="MinVer" PrivateAssets="All"/>
        <Using Include="Eventuous"/>
        <Using Include="JetBrains.Annotations"/>
        <Using Include="System.Diagnostics.CodeAnalysis"/>
    </ItemGroup>
    <ItemGroup Condition="'$(IsTestProject)' == 'true'">
        <PackageReference Include="AutoFixture"/>
        <PackageReference Include="Bogus"/>
        <PackageReference Include="coverlet.collector"/>
        <PackageReference Include="FluentAssertions"/>
        <PackageReference Include="xunit.v3"/>
        <PackageReference Include="Microsoft.NET.Test.Sdk"/>
        <PackageReference Include="Microsoft.Testing.Extensions.TrxReport"/>
        <Using Include="AutoFixture"/>
        <Using Include="FluentAssertions"/>
        <Using Include="FluentAssertions.Extensions"/>
        <Using Include="Microsoft.Extensions.Logging"/>
        <Using Include="Xunit"/>
    </ItemGroup>
    <ItemGroup Condition="'$(IncludeTestHost)' == 'true'">
        <PackageReference Include="Microsoft.AspNetCore.TestHost"/>
    </ItemGroup>
    <ItemGroup Condition="'$(IncludeSutApp)' == 'true'">
        <ProjectReference Include="$(RepoRoot)\test\Eventuous.Sut.App\Eventuous.Sut.App.csproj"/>
        <ProjectReference Include="$(RepoRoot)\test\Eventuous.Sut.Domain\Eventuous.Sut.Domain.csproj"/>
    </ItemGroup>
    <ItemGroup Condition="'$(IncludeTestHelpers)' == 'true'">
        <ProjectReference Include="$(RepoRoot)\test\Eventuous.TestHelpers\Eventuous.TestHelpers.csproj"/>
    </ItemGroup>
    <Target Name="CustomVersion" AfterTargets="MinVer">
        <PropertyGroup>
            <FileVersion>$(MinVerMajor).$(MinVerMinor).$(MinVerPatch)</FileVersion>
            <AssemblyVersion>$(MinVerMajor).$(MinVerMinor).$(MinVerPatch)</AssemblyVersion>
        </PropertyGroup>
    </Target>
</Project>